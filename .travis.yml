language: python
python: 2.7
os:
  - linux
#  - osx
# Ubuntu 14.04 Trusty support
sudo: required
#dist: trusty
# install new cmake
#addons:
#  apt:
#    packages:
#      - cmake
#    sources:
#      - kalakris-cmake
env:
#    - CONDA_PYTHON_VERSION=2.7
    - CONDA_PYTHON_VERSION=3.6
    - CONDA_PYTHON_VERSION=3.7
    - CONDA_PYTHON_VERSION=3.8


matrix:
  include:
    - os: osx
      language: minimal
      name: osx python36
      env:
        - CONDA_PYTHON_VERSION=3.6
    - os: osx
      language: minimal
      name: osx python37
      env:
        - CONDA_PYTHON_VERSION=3.7
  allow_failures:
    - env: CONDA_PYTHON_VERSION=3.7
    - env: CONDA_PYTHON_VERSION=3.8
    - name: "osx python37"
  fast_finish: true

virtualenv:
  system_site_packages: true
before_install:
    - if [[ "$(uname)" == "Darwin" ]]; then
      # Do something under Mac OS X platform
      elif [[ "$(expr substr $(uname -s) 1 5)" == "Linux" ]]; then
        sudo apt-get update;
        sudo apt-get install -qq cmake libinsighttoolkit3-dev libpng12-dev libgdcm2-dev;
      # Do something under GNU/Linux platform
  #    elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]; then
      # Do something under 32 bits Windows NT platform
  #    elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW64_NT" ]; then
      # Do something under 64 bits Windows NT platform
      fi

    # We do this conditionally because it saves us some downloading if the
    # version is the same.
    - if [[ "$CONDA_PYTHON_VERSION" == "2.7" ]]; then
        wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
      else
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      fi
#    - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
#    - chmod +x miniconda.sh
#    - ./miniconda.sh -b
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    # Useful for debugging any issues with conda
    - conda info -a
    - conda config --add channels SimpleITK
    - conda config --add channels mjirik
    - conda config --add channels luispedro
    - conda config --add channels conda-forge

    # - wget http://147.228.240.61/queetech/sample-extra-data/io3d_sample_data.zip && unzip io3d_sample_data.zip
# command to install dependencies
install:

#    - conda install --yes pip nose
    # Install dependencies
    - conda install --yes --file requirements_conda.txt python=$CONDA_PYTHON_VERSION pip pytest-cov
#    - conda install --yes pytest-cov
    # - pip install -r requirements_pip.txt
#    - pip install python-coveralls
    - "echo $LD_LIBRARY_PATH"
    - pip install -r requirements.txt
    - mkdir build
    - cd build
    - cmake ..
    - cmake --build .
    - conda list -e
#    - cmake --install .
    - sudo make install
    - cd ..
    - pip install .
    - 'echo "include /usr/local/lib" | sudo tee -a /etc/ld.so.conf'
    - 'sudo ldconfig -v'
    - conda list -e
# command to run tests
script:
#  - mkdir empty && cd empty
  - pytest --cov=skelet3d/ tests
#  - python -m pytest --cov=skelet3d/ ../tests
after_success:
    - coveralls
